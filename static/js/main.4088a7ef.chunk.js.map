{"version":3,"sources":["components/Task.js","components/TaskDone.js","components/TaskBar.js","components/Alert.js","components/TodoForm.js","components/App.js","index.js"],"names":["Task","props","useEffect","setAlert","alertWindow","setTimeout","clearInterval","elems","document","querySelectorAll","length","classList","remove","className","number","task","txt","value","id","onClick","doneAction","delAction","TaskDone","style","textDecoration","retAction","TaskBar","tasks","map","i","key","alert","done","textAlign","Alert","message","TodoFrom","onSubmit","handleSubmit","type","placeholder","onChange","handleChange","text","App","useState","count","setCount","setText","setTasks","setMessage","setDone","messageAction","mes","forEach","item","addEventListener","console","log","e","preventDefault","filter","target","concat","input","querySelector","trim","blur","newTask","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4088a7ef.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport \"./Task.scss\";\r\n\r\nconst Task = (props) => {\r\n  useEffect(() => {\r\n    props.setAlert(true);\r\n    let alertWindow = setTimeout(() => props.setAlert(false), 1000);\r\n\r\n    return () => {\r\n      clearInterval(alertWindow);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const elems = document.querySelectorAll(\".task\");\r\n\r\n    elems[elems.length - 1].classList.remove(\"invisible\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task invisible\">\r\n        <div className=\"task-txt\">\r\n          <span className=\"task-number\">{props.number})</span>\r\n          <span className=\"task-topic\">{` ${props.task.txt}`}</span>\r\n        </div>\r\n        <div className=\"task-control\">\r\n          <button\r\n            value={props.task.id}\r\n            className=\"done\"\r\n            onClick={props.doneAction}\r\n          >\r\n            &#10004;\r\n          </button>\r\n\r\n          <button\r\n            value={props.task.id}\r\n            className=\"delete\"\r\n            onClick={props.delAction}\r\n          >\r\n            &#10008;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport \"./Task.scss\";\r\nimport \"./TaskDone.scss\";\r\n\r\nconst TaskDone = (props) => {\r\n  useEffect(() => {\r\n    const elems = document.querySelectorAll(\".task-done\");\r\n\r\n    elems[elems.length - 1].classList.remove(\"invisible\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-done invisible\">\r\n        <div className=\"task-txt\">\r\n          <span className=\"task-done-number\">{props.number})</span>\r\n          <span\r\n            className=\"task-done-topic\"\r\n            style={{ textDecoration: \"line-through\" }}\r\n          >{` ${props.task.txt}`}</span>\r\n        </div>\r\n        <div className=\"task-control\">\r\n          <button\r\n            value={props.task.id}\r\n            className=\"return\"\r\n            onClick={props.retAction}\r\n          >\r\n            &#9850;\r\n          </button>\r\n\r\n          <button\r\n            value={props.task.id}\r\n            className=\"delete\"\r\n            onClick={props.delAction}\r\n          >\r\n            &#10008;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDone;\r\n","import React from \"react\";\r\n\r\nimport \"./TaskBar.scss\";\r\nimport Task from \"./Task\";\r\nimport TaskDone from \"./TaskDone\";\r\n\r\nconst TaskBar = (props) => {\r\n  return (\r\n    <div className=\"tasks tasks-scroll\">\r\n      {props.tasks.map((task, i) => (\r\n        <Task\r\n          key={i}\r\n          task={task}\r\n          doneAction={props.doneAction}\r\n          delAction={props.delAction}\r\n          alert={props.alert}\r\n          setAlert={props.setAlert}\r\n          number={i + 1}\r\n        />\r\n      ))}\r\n      {props.done.length > 0 ? (\r\n        <p className=\"done-txt\" style={{ textAlign: \"center\" }}>\r\n          Done:\r\n        </p>\r\n      ) : null}\r\n\r\n      {props.done.map((task, i) => (\r\n        <TaskDone\r\n          key={i}\r\n          task={task}\r\n          delAction={props.delAction}\r\n          retAction={props.retAction}\r\n          alert={props.alert}\r\n          setAlert={props.setAlert}\r\n          number={i + 1}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Alert.scss\";\r\n\r\nconst Alert = (props) => {\r\n  return (\r\n    <div className={props.alert ? \"alert alert-active\" : \"alert\"}>\r\n      <p className=\"alert-txt\">\r\n        {props.message === \"add\"\r\n          ? \"Task added!\"\r\n          : props.message === \"done\"\r\n          ? \"Task done!\"\r\n          : props.message === \"del\"\r\n          ? \"Task deleted!\"\r\n          : props.message === \"ret\"\r\n          ? \"Task returned!\"\r\n          : props.message === \"long\"\r\n          ? \"Task is too long!\"\r\n          : null}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nimport \"./TodoForm.scss\";\r\n\r\nconst TodoFrom = (props) => {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form-place\" onSubmit={props.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-input\"\r\n          placeholder=\"Enter new task\"\r\n          onChange={props.handleChange}\r\n          value={props.text}\r\n        />\r\n        <button className=\"form-button\">ADD</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoFrom;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.scss\";\nimport TaskBar from \"./TaskBar\";\nimport Alert from \"./Alert\";\nimport TodoFrom from \"./TodoForm\";\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [done, setDone] = useState([]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const messageAction = (mes) => {\n    setMessage(mes);\n    setAlert(true);\n\n    const alertWindow = setTimeout(() => setAlert(false), 1000);\n\n    return () => {\n      clearInterval(alertWindow);\n    };\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const input = document.querySelector(\".form-input\");\n\n    if (text.trim().length === 0) {\n      setText(\"\");\n      input.blur();\n      return;\n    }\n\n    if (text.length > 25) {\n      setText(\"\");\n      input.blur();\n      messageAction(\"long\");\n      return;\n    }\n\n    setCount(tasks.length + 1);\n\n    const newTask = {\n      txt: text,\n      id: `${count}-${text}`,\n    };\n\n    setTasks(tasks.concat(newTask));\n\n    setText(\"\");\n    messageAction(\"add\");\n    input.blur();\n  };\n\n  const handleTaskDone = (e) => {\n    e.preventDefault();\n\n    setTasks(\n      tasks.filter((task) => {\n        return task.id !== e.target.value;\n      })\n    );\n\n    setDone(\n      done.concat(\n        tasks.filter((task) => {\n          return task.id === e.target.value;\n        })\n      )\n    );\n    setCount(tasks.length - 1);\n\n    messageAction(\"done\");\n  };\n\n  const handleTaskDel = (e) => {\n    e.preventDefault();\n\n    setTasks(\n      tasks.filter((task) => {\n        return task.id !== e.target.value;\n      })\n    );\n\n    setDone(\n      done.filter((task) => {\n        return task.id !== e.target.value;\n      })\n    );\n\n    tasks.forEach((task) => {\n      if (task.id === e.target.value) {\n        setCount(tasks.length - 1);\n      }\n    });\n\n    messageAction(\"del\");\n  };\n\n  const handleTaskReturn = (e) => {\n    e.preventDefault();\n\n    setDone(\n      done.filter((task) => {\n        return task.id !== e.target.value;\n      })\n    );\n\n    setTasks(\n      tasks.concat(\n        done.filter((task) => {\n          return task.id === e.target.value;\n        })\n      )\n    );\n    setCount(tasks.length + 1);\n\n    messageAction(\"ret\");\n  };\n\n  useEffect(() => {\n    const delBut = document.querySelectorAll(\".delete\");\n\n    delBut.forEach((item) =>\n      item.addEventListener(\"click\", () => console.log(\"deleted!\"))\n    );\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <Alert alert={alert} message={message} />\n      <header>\n        <p className=\"header-txt\">\n          You have <span className=\"header-count\">{count}</span> tasks\n        </p>\n      </header>\n\n      <TaskBar\n        tasks={tasks}\n        doneAction={handleTaskDone}\n        delAction={handleTaskDel}\n        retAction={handleTaskReturn}\n        alert={alert}\n        setAlert={setAlert}\n        done={done}\n      />\n\n      <TodoFrom\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        text={text}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}